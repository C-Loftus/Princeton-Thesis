import PySimpleGUIWeb as sg
import requests
sg.theme('DarkAmber')
import shelve
IP="http://localhost:5000/openapi.json"


route_description = {
    "/start": "Start the server",
    "/stop": "Stop the server",
    "/running": "Check if the server is running",
    "/clients": "Get the number of connected clients",
}

global db
db = shelve.open("client.db")
db["url"] = "None" if "url" not in db else db["url"]

def get_routes():
    response = requests.get(IP).json()
    
    buttons=[]
    for route in (response['paths']): 
        if route in route_description:
            key = "-STATUS-" if route == "/running" else route
            buttons.append(sg.Button(route_description[route], key=key))
    return buttons
    

def create_ui(route_buttons):
    # Create a shelve object to store the server URL

    # Create the layout of the GUI
    layout = [[sg.Text("Connect to a server for Federated Learning", font=("Helvetica", 22), justification='r')],
            [sg.Text(f'Saved Server URL: {db["url"] if "url" in db else "None"}', key="-URL-")],
            [sg.Text("Update Server URL:"), sg.Input()], 
            [sg.Button("Connect")],
            [sg.Text("Interact with server API:"), *route_buttons],
            [sg.Text("Response:", size=(15, 1)), sg.Multiline(size=(40, 10), key="-RESPONSE-")]]

    window = sg.Window("Connection", layout)

    while True:
        event, values = window.read()
        if event in (sg.WIN_CLOSED, "Close Window"):
            break
        if event == "Connect":
            url = values[0] if values[0] != "" else db["url"]
            db["url"] = url

            try:
                response = requests.get(url)
                window["-RESPONSE-"].update(response.text)
            except Exception as e:
                window["-RESPONSE-"].update(str(e))
            window["-URL-"].update(f'Saved Server URL: {db["url"] if "url" in db else "None"}')
            
        elif event == "-STATUS-":
            # Check if the server is running
            try:
                response = requests.get(db["url"])
                window["-RESPONSE-"].update(response.text)
            except Exception as e:
                window["-RESPONSE-"].update(str(e))
        elif event: 
            # Send a GET request to the server and display the response
            response = requests.get(db["url"] + event)
            window["-RESPONSE-"].update(response.text)


    window.close()

if __name__ == "__main__":
    route_buttons = get_routes()
    create_ui(route_buttons)+   